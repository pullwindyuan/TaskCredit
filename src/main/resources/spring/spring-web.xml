<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">



    <task:annotation-driven />
    <!--<cache:annotation-driven />-->
    <!-- 配置springMVC -->
    <!-- 开SpringMVC注解模式 -->
    <!--1.简化配置：
        1.自动注册DefaultAnnotationHandlerMapping，AnnotationMethodHandlerAdapter
        2.提供一系列数据绑定，数据和日期的format，xml、json默认的读写支持
     -->
    <mvc:annotation-driven/>

    <!-- 2.静态资源默认servlet配置
        1.加入对静态资源的处理：js,gif,png
        2.允许使用“/”做整体映射
    -->
    <mvc:default-servlet-handler/>

    <!-- 3.配置jsp显示的ViewResolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">

        <property name="viewClass"  value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>

    </bean>

    <!-- 4.扫描web相关的bean -->
    <context:component-scan base-package="cn.cvte"/>

    <!-- 配置springMVC -->
    <!-- 开SpringMVC注解模式 -->
    <!--1.简化配置：
        1.自动注册DefaultAnnotationHandlerMapping，AnnotationMethodHandlerAdapter
        2.提供一系列数据绑定，数据和日期的format，xml、json默认的读写支持
     -->
    <aop:aspectj-autoproxy/>

    <mvc:interceptors>
        <!-- 配置登陆拦截器 -->
        <mvc:interceptor>
            <!--拦截后台页面的请求-->
            <mvc:mapping path="/**"/>
            <!--<mvc:mapping path="/test/testMethod"/>-->
            <!--不拦截登录页和登录的请求-->
            <mvc:exclude-mapping path="*.jsp"/>
            <mvc:exclude-mapping path="/task/user/login"/>
            <!--<bean class="com.fuzhu.Interceptor.Myinterceptor"></bean>-->
            <bean class="cn.cvte.interceptor.VarifyTokenInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>


    <!-- 3.配置jsp显示的ViewResolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">

        <property name="viewClass"  value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>

    </bean>
    <bean id="dataJedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="1000"/>
        <property name="maxIdle" value="500"/>
        <property name="maxWaitMillis" value="10000"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="blockWhenExhausted" value="false"/>
    </bean>

    <bean class="cn.cvte.dao.RedisDao" lazy-init="false">
        <constructor-arg index="0" ref="dataJedisPoolConfig"/>
        <constructor-arg index="1" value="119.29.53.102"/>
        <constructor-arg index="2" value="6379"/>
        <constructor-arg index="3" value=""/>
    </bean>

    <import resource="spring-dao.xml"/>

</beans>